<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="762" onload="init(evt)" viewBox="0 0 1200 762" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="762" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python ./tests/miac/perp2/ppo_perp2_level_0.py --mode train --total_timesteps 66000 --progress_bar True</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="751.00"> </text><svg id="frames" x="10" width="1180" total_samples="51238"><g><title>&lt;module&gt; (ppo_perp2_level_0.py:3) (76 samples, 0.15%)</title><rect x="0.0000%" y="68" width="0.1483%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="76"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (76 samples, 0.15%)</title><rect x="0.0000%" y="84" width="0.1483%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="76"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (76 samples, 0.15%)</title><rect x="0.0000%" y="100" width="0.1483%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="76"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (76 samples, 0.15%)</title><rect x="0.0000%" y="116" width="0.1483%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="76"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (76 samples, 0.15%)</title><rect x="0.0000%" y="132" width="0.1483%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="76"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (76 samples, 0.15%)</title><rect x="0.0000%" y="148" width="0.1483%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="76"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/exc.py:11) (73 samples, 0.14%)</title><rect x="0.2147%" y="644" width="0.1425%" height="15" fill="rgb(207,160,47)" fg:x="110" fg:w="73"/><text x="0.4647%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (73 samples, 0.14%)</title><rect x="0.2147%" y="660" width="0.1425%" height="15" fill="rgb(228,23,34)" fg:x="110" fg:w="73"/><text x="0.4647%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (73 samples, 0.14%)</title><rect x="0.2147%" y="676" width="0.1425%" height="15" fill="rgb(218,30,26)" fg:x="110" fg:w="73"/><text x="0.4647%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (73 samples, 0.14%)</title><rect x="0.2147%" y="692" width="0.1425%" height="15" fill="rgb(220,122,19)" fg:x="110" fg:w="73"/><text x="0.4647%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (73 samples, 0.14%)</title><rect x="0.2147%" y="708" width="0.1425%" height="15" fill="rgb(250,228,42)" fg:x="110" fg:w="73"/><text x="0.4647%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (73 samples, 0.14%)</title><rect x="0.2147%" y="724" width="0.1425%" height="15" fill="rgb(240,193,28)" fg:x="110" fg:w="73"/><text x="0.4647%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/symbolic_convert.py:27) (74 samples, 0.14%)</title><rect x="0.2147%" y="548" width="0.1444%" height="15" fill="rgb(216,20,37)" fg:x="110" fg:w="74"/><text x="0.4647%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (74 samples, 0.14%)</title><rect x="0.2147%" y="564" width="0.1444%" height="15" fill="rgb(206,188,39)" fg:x="110" fg:w="74"/><text x="0.4647%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (74 samples, 0.14%)</title><rect x="0.2147%" y="580" width="0.1444%" height="15" fill="rgb(217,207,13)" fg:x="110" fg:w="74"/><text x="0.4647%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (74 samples, 0.14%)</title><rect x="0.2147%" y="596" width="0.1444%" height="15" fill="rgb(231,73,38)" fg:x="110" fg:w="74"/><text x="0.4647%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (74 samples, 0.14%)</title><rect x="0.2147%" y="612" width="0.1444%" height="15" fill="rgb(225,20,46)" fg:x="110" fg:w="74"/><text x="0.4647%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (74 samples, 0.14%)</title><rect x="0.2147%" y="628" width="0.1444%" height="15" fill="rgb(210,31,41)" fg:x="110" fg:w="74"/><text x="0.4647%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:3) (115 samples, 0.22%)</title><rect x="0.2127%" y="324" width="0.2244%" height="15" fill="rgb(221,200,47)" fg:x="109" fg:w="115"/><text x="0.4627%" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1232) (115 samples, 0.22%)</title><rect x="0.2127%" y="340" width="0.2244%" height="15" fill="rgb(226,26,5)" fg:x="109" fg:w="115"/><text x="0.4627%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (115 samples, 0.22%)</title><rect x="0.2127%" y="356" width="0.2244%" height="15" fill="rgb(249,33,26)" fg:x="109" fg:w="115"/><text x="0.4627%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (115 samples, 0.22%)</title><rect x="0.2127%" y="372" width="0.2244%" height="15" fill="rgb(235,183,28)" fg:x="109" fg:w="115"/><text x="0.4627%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (115 samples, 0.22%)</title><rect x="0.2127%" y="388" width="0.2244%" height="15" fill="rgb(221,5,38)" fg:x="109" fg:w="115"/><text x="0.4627%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (115 samples, 0.22%)</title><rect x="0.2127%" y="404" width="0.2244%" height="15" fill="rgb(247,18,42)" fg:x="109" fg:w="115"/><text x="0.4627%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (115 samples, 0.22%)</title><rect x="0.2127%" y="420" width="0.2244%" height="15" fill="rgb(241,131,45)" fg:x="109" fg:w="115"/><text x="0.4627%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (115 samples, 0.22%)</title><rect x="0.2127%" y="436" width="0.2244%" height="15" fill="rgb(249,31,29)" fg:x="109" fg:w="115"/><text x="0.4627%" y="446.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/convert_frame.py:33) (114 samples, 0.22%)</title><rect x="0.2147%" y="452" width="0.2225%" height="15" fill="rgb(225,111,53)" fg:x="110" fg:w="114"/><text x="0.4647%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (114 samples, 0.22%)</title><rect x="0.2147%" y="468" width="0.2225%" height="15" fill="rgb(238,160,17)" fg:x="110" fg:w="114"/><text x="0.4647%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (114 samples, 0.22%)</title><rect x="0.2147%" y="484" width="0.2225%" height="15" fill="rgb(214,148,48)" fg:x="110" fg:w="114"/><text x="0.4647%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (114 samples, 0.22%)</title><rect x="0.2147%" y="500" width="0.2225%" height="15" fill="rgb(232,36,49)" fg:x="110" fg:w="114"/><text x="0.4647%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (114 samples, 0.22%)</title><rect x="0.2147%" y="516" width="0.2225%" height="15" fill="rgb(209,103,24)" fg:x="110" fg:w="114"/><text x="0.4647%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (114 samples, 0.22%)</title><rect x="0.2147%" y="532" width="0.2225%" height="15" fill="rgb(229,88,8)" fg:x="110" fg:w="114"/><text x="0.4647%" y="542.50"></text></g><g><title>train (tests/helpers/trainer_testers.py:125) (125 samples, 0.24%)</title><rect x="0.2049%" y="100" width="0.2440%" height="15" fill="rgb(213,181,19)" fg:x="105" fg:w="125"/><text x="0.4549%" y="110.50"></text></g><g><title>__init__ (stable_baselines3/ppo/ppo.py:171) (125 samples, 0.24%)</title><rect x="0.2049%" y="116" width="0.2440%" height="15" fill="rgb(254,191,54)" fg:x="105" fg:w="125"/><text x="0.4549%" y="126.50"></text></g><g><title>_setup_model (stable_baselines3/ppo/ppo.py:174) (125 samples, 0.24%)</title><rect x="0.2049%" y="132" width="0.2440%" height="15" fill="rgb(241,83,37)" fg:x="105" fg:w="125"/><text x="0.4549%" y="142.50"></text></g><g><title>_setup_model (stable_baselines3/common/on_policy_algorithm.py:134) (125 samples, 0.24%)</title><rect x="0.2049%" y="148" width="0.2440%" height="15" fill="rgb(233,36,39)" fg:x="105" fg:w="125"/><text x="0.4549%" y="158.50"></text></g><g><title>__init__ (stable_baselines3/common/policies.py:535) (125 samples, 0.24%)</title><rect x="0.2049%" y="164" width="0.2440%" height="15" fill="rgb(226,3,54)" fg:x="105" fg:w="125"/><text x="0.4549%" y="174.50"></text></g><g><title>_build (stable_baselines3/common/policies.py:634) (121 samples, 0.24%)</title><rect x="0.2127%" y="180" width="0.2362%" height="15" fill="rgb(245,192,40)" fg:x="109" fg:w="121"/><text x="0.4627%" y="190.50"></text></g><g><title>__init__ (torch/optim/adam.py:99) (121 samples, 0.24%)</title><rect x="0.2127%" y="196" width="0.2362%" height="15" fill="rgb(238,167,29)" fg:x="109" fg:w="121"/><text x="0.4627%" y="206.50"></text></g><g><title>__init__ (torch/optim/optimizer.py:377) (121 samples, 0.24%)</title><rect x="0.2127%" y="212" width="0.2362%" height="15" fill="rgb(232,182,51)" fg:x="109" fg:w="121"/><text x="0.4627%" y="222.50"></text></g><g><title>inner (torch/_compile.py:27) (121 samples, 0.24%)</title><rect x="0.2127%" y="228" width="0.2362%" height="15" fill="rgb(231,60,39)" fg:x="109" fg:w="121"/><text x="0.4627%" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (121 samples, 0.24%)</title><rect x="0.2127%" y="244" width="0.2362%" height="15" fill="rgb(208,69,12)" fg:x="109" fg:w="121"/><text x="0.4627%" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (121 samples, 0.24%)</title><rect x="0.2127%" y="260" width="0.2362%" height="15" fill="rgb(235,93,37)" fg:x="109" fg:w="121"/><text x="0.4627%" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (121 samples, 0.24%)</title><rect x="0.2127%" y="276" width="0.2362%" height="15" fill="rgb(213,116,39)" fg:x="109" fg:w="121"/><text x="0.4627%" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (121 samples, 0.24%)</title><rect x="0.2127%" y="292" width="0.2362%" height="15" fill="rgb(222,207,29)" fg:x="109" fg:w="121"/><text x="0.4627%" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (121 samples, 0.24%)</title><rect x="0.2127%" y="308" width="0.2362%" height="15" fill="rgb(206,96,30)" fg:x="109" fg:w="121"/><text x="0.4627%" y="318.50"></text></g><g><title>forward_actor (stable_baselines3/common/torch_layers.py:225) (175 samples, 0.34%)</title><rect x="0.5523%" y="260" width="0.3415%" height="15" fill="rgb(218,138,4)" fg:x="283" fg:w="175"/><text x="0.8023%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (174 samples, 0.34%)</title><rect x="0.5543%" y="276" width="0.3396%" height="15" fill="rgb(250,191,14)" fg:x="284" fg:w="174"/><text x="0.8043%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (174 samples, 0.34%)</title><rect x="0.5543%" y="292" width="0.3396%" height="15" fill="rgb(239,60,40)" fg:x="284" fg:w="174"/><text x="0.8043%" y="302.50"></text></g><g><title>forward (torch/nn/modules/container.py:250) (172 samples, 0.34%)</title><rect x="0.5582%" y="308" width="0.3357%" height="15" fill="rgb(206,27,48)" fg:x="286" fg:w="172"/><text x="0.8082%" y="318.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (172 samples, 0.34%)</title><rect x="0.5582%" y="324" width="0.3357%" height="15" fill="rgb(225,35,8)" fg:x="286" fg:w="172"/><text x="0.8082%" y="334.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (167 samples, 0.33%)</title><rect x="0.5679%" y="340" width="0.3259%" height="15" fill="rgb(250,213,24)" fg:x="291" fg:w="167"/><text x="0.8179%" y="350.50"></text></g><g><title>forward (torch/nn/modules/linear.py:125) (144 samples, 0.28%)</title><rect x="0.6128%" y="356" width="0.2810%" height="15" fill="rgb(247,123,22)" fg:x="314" fg:w="144"/><text x="0.8628%" y="366.50"></text></g><g><title>forward (stable_baselines3/common/policies.py:647) (218 samples, 0.43%)</title><rect x="0.5484%" y="196" width="0.4255%" height="15" fill="rgb(231,138,38)" fg:x="281" fg:w="218"/><text x="0.7984%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (217 samples, 0.42%)</title><rect x="0.5504%" y="212" width="0.4235%" height="15" fill="rgb(231,145,46)" fg:x="282" fg:w="217"/><text x="0.8004%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (216 samples, 0.42%)</title><rect x="0.5523%" y="228" width="0.4216%" height="15" fill="rgb(251,118,11)" fg:x="283" fg:w="216"/><text x="0.8023%" y="238.50"></text></g><g><title>forward (stable_baselines3/common/torch_layers.py:222) (216 samples, 0.42%)</title><rect x="0.5523%" y="244" width="0.4216%" height="15" fill="rgb(217,147,25)" fg:x="283" fg:w="216"/><text x="0.8023%" y="254.50"></text></g><g><title>forward (stable_baselines3/common/policies.py:654) (91 samples, 0.18%)</title><rect x="0.9875%" y="196" width="0.1776%" height="15" fill="rgb(247,81,37)" fg:x="506" fg:w="91"/><text x="1.2375%" y="206.50"></text></g><g><title>_get_action_dist_from_latent (stable_baselines3/common/policies.py:694) (78 samples, 0.15%)</title><rect x="1.0129%" y="212" width="0.1522%" height="15" fill="rgb(209,12,38)" fg:x="519" fg:w="78"/><text x="1.2629%" y="222.50"></text></g><g><title>proba_distribution (stable_baselines3/common/distributions.py:164) (61 samples, 0.12%)</title><rect x="1.0461%" y="228" width="0.1191%" height="15" fill="rgb(227,1,9)" fg:x="536" fg:w="61"/><text x="1.2961%" y="238.50"></text></g><g><title>log_prob (stable_baselines3/common/distributions.py:175) (116 samples, 0.23%)</title><rect x="1.2276%" y="212" width="0.2264%" height="15" fill="rgb(248,47,43)" fg:x="629" fg:w="116"/><text x="1.4776%" y="222.50"></text></g><g><title>forward (stable_baselines3/common/policies.py:656) (136 samples, 0.27%)</title><rect x="1.2276%" y="196" width="0.2654%" height="15" fill="rgb(221,10,30)" fg:x="629" fg:w="136"/><text x="1.4776%" y="206.50"></text></g><g><title>collect_rollouts (stable_baselines3/common/on_policy_algorithm.py:179) (519 samples, 1.01%)</title><rect x="0.5035%" y="148" width="1.0129%" height="15" fill="rgb(210,229,1)" fg:x="258" fg:w="519"/><text x="0.7535%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (517 samples, 1.01%)</title><rect x="0.5074%" y="164" width="1.0090%" height="15" fill="rgb(222,148,37)" fg:x="260" fg:w="517"/><text x="0.7574%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (513 samples, 1.00%)</title><rect x="0.5152%" y="180" width="1.0012%" height="15" fill="rgb(234,67,33)" fg:x="264" fg:w="513"/><text x="0.7652%" y="190.50"></text></g><g><title>step (rl_environments/single_agent/miac/miac_base.py:183) (59 samples, 0.12%)</title><rect x="1.7624%" y="212" width="0.1151%" height="15" fill="rgb(247,98,35)" fg:x="903" fg:w="59"/><text x="2.0124%" y="222.50"></text></g><g><title>step (rl_environments/single_agent/miac/miac_base.py:190) (94 samples, 0.18%)</title><rect x="1.8775%" y="212" width="0.1835%" height="15" fill="rgb(247,138,52)" fg:x="962" fg:w="94"/><text x="2.1275%" y="222.50"></text></g><g><title>norm (numpy/linalg/linalg.py:2552) (70 samples, 0.14%)</title><rect x="2.2093%" y="228" width="0.1366%" height="15" fill="rgb(213,79,30)" fg:x="1132" fg:w="70"/><text x="2.4593%" y="238.50"></text></g><g><title>step (rl_environments/single_agent/miac/miac_base.py:195) (167 samples, 0.33%)</title><rect x="2.0707%" y="212" width="0.3259%" height="15" fill="rgb(246,177,23)" fg:x="1061" fg:w="167"/><text x="2.3207%" y="222.50"></text></g><g><title>step (rl_environments/single_agent/miac/miac_base.py:202) (72 samples, 0.14%)</title><rect x="2.4162%" y="212" width="0.1405%" height="15" fill="rgb(230,62,27)" fg:x="1238" fg:w="72"/><text x="2.6662%" y="222.50"></text></g><g><title>step (rl_environments/single_agent/miac/miac_base.py:207) (55 samples, 0.11%)</title><rect x="2.5567%" y="212" width="0.1073%" height="15" fill="rgb(216,154,8)" fg:x="1310" fg:w="55"/><text x="2.8067%" y="222.50"></text></g><g><title>apply (simulator/models/simulation_configuration/simulation_dynamics.py:61) (142 samples, 0.28%)</title><rect x="2.7070%" y="260" width="0.2771%" height="15" fill="rgb(244,35,45)" fg:x="1387" fg:w="142"/><text x="2.9570%" y="270.50"></text></g><g><title>run_before_step_dynamics (simulator/engines/base.py:46) (209 samples, 0.41%)</title><rect x="2.6992%" y="244" width="0.4079%" height="15" fill="rgb(251,115,12)" fg:x="1383" fg:w="209"/><text x="2.9492%" y="254.50"></text></g><g><title>apply (simulator/models/simulation_configuration/simulation_dynamics.py:62) (63 samples, 0.12%)</title><rect x="2.9841%" y="260" width="0.1230%" height="15" fill="rgb(240,54,50)" fg:x="1529" fg:w="63"/><text x="3.2341%" y="270.50"></text></g><g><title>execute_simulation_step (simulator/engines/base.py:199) (225 samples, 0.44%)</title><rect x="2.6777%" y="228" width="0.4391%" height="15" fill="rgb(233,84,52)" fg:x="1372" fg:w="225"/><text x="2.9277%" y="238.50"></text></g><g><title>update_agent_velocities (simulator/engines/RVO2SimulatorWrapper.py:465) (152 samples, 0.30%)</title><rect x="4.1493%" y="260" width="0.2967%" height="15" fill="rgb(207,117,47)" fg:x="2126" fg:w="152"/><text x="4.3993%" y="270.50"></text></g><g><title>update_agent_velocities (simulator/engines/RVO2SimulatorWrapper.py:466) (135 samples, 0.26%)</title><rect x="4.4459%" y="260" width="0.2635%" height="15" fill="rgb(249,43,39)" fg:x="2278" fg:w="135"/><text x="4.6959%" y="270.50"></text></g><g><title>update_agent_velocities (simulator/engines/RVO2SimulatorWrapper.py:473) (215 samples, 0.42%)</title><rect x="4.9455%" y="260" width="0.4196%" height="15" fill="rgb(209,38,44)" fg:x="2534" fg:w="215"/><text x="5.1955%" y="270.50"></text></g><g><title>update_agent_velocities (simulator/engines/RVO2SimulatorWrapper.py:474) (95 samples, 0.19%)</title><rect x="5.3652%" y="260" width="0.1854%" height="15" fill="rgb(236,212,23)" fg:x="2749" fg:w="95"/><text x="5.6152%" y="270.50"></text></g><g><title>update_agent_velocities (simulator/engines/RVO2SimulatorWrapper.py:479) (61 samples, 0.12%)</title><rect x="5.7672%" y="260" width="0.1191%" height="15" fill="rgb(242,79,21)" fg:x="2955" fg:w="61"/><text x="6.0172%" y="270.50"></text></g><g><title>update_agent_velocities (simulator/engines/RVO2SimulatorWrapper.py:484) (58 samples, 0.11%)</title><rect x="5.8941%" y="260" width="0.1132%" height="15" fill="rgb(211,96,35)" fg:x="3020" fg:w="58"/><text x="6.1441%" y="270.50"></text></g><g><title>step (simulator/engines/RVO2SimulatorWrapper.py:308) (1,067 samples, 2.08%)</title><rect x="3.9326%" y="244" width="2.0824%" height="15" fill="rgb(253,215,40)" fg:x="2015" fg:w="1067"/><text x="4.1826%" y="254.50">s..</text></g><g><title>step (simulator/engines/RVO2SimulatorWrapper.py:309) (17,316 samples, 33.80%)</title><rect x="6.0151%" y="244" width="33.7952%" height="15" fill="rgb(211,81,21)" fg:x="3082" fg:w="17316"/><text x="6.2651%" y="254.50">step (simulator/engines/RVO2SimulatorWrapper.py:309)</text></g><g><title>distance_from_goal (simulator/engines/RVO2SimulatorWrapper.py:560) (54 samples, 0.11%)</title><rect x="40.1460%" y="276" width="0.1054%" height="15" fill="rgb(208,190,38)" fg:x="20570" fg:w="54"/><text x="40.3960%" y="286.50"></text></g><g><title>distance_from_goal (simulator/engines/RVO2SimulatorWrapper.py:561) (137 samples, 0.27%)</title><rect x="40.2514%" y="276" width="0.2674%" height="15" fill="rgb(235,213,38)" fg:x="20624" fg:w="137"/><text x="40.5014%" y="286.50"></text></g><g><title>get_goal (simulator/engines/RVO2SimulatorWrapper.py:543) (108 samples, 0.21%)</title><rect x="40.3080%" y="292" width="0.2108%" height="15" fill="rgb(237,122,38)" fg:x="20653" fg:w="108"/><text x="40.5580%" y="302.50"></text></g><g><title>distance_from_goal (simulator/engines/RVO2SimulatorWrapper.py:566) (157 samples, 0.31%)</title><rect x="40.5890%" y="276" width="0.3064%" height="15" fill="rgb(244,218,35)" fg:x="20797" fg:w="157"/><text x="40.8390%" y="286.50"></text></g><g><title>is_goal_reached (simulator/engines/RVO2SimulatorWrapper.py:555) (552 samples, 1.08%)</title><rect x="40.0113%" y="260" width="1.0773%" height="15" fill="rgb(240,68,47)" fg:x="20501" fg:w="552"/><text x="40.2613%" y="270.50"></text></g><g><title>distance_from_goal (simulator/engines/RVO2SimulatorWrapper.py:567) (99 samples, 0.19%)</title><rect x="40.8954%" y="276" width="0.1932%" height="15" fill="rgb(210,16,53)" fg:x="20954" fg:w="99"/><text x="41.1454%" y="286.50"></text></g><g><title>step (simulator/engines/RVO2SimulatorWrapper.py:313) (637 samples, 1.24%)</title><rect x="39.8923%" y="244" width="1.2432%" height="15" fill="rgb(235,124,12)" fg:x="20440" fg:w="637"/><text x="40.1423%" y="254.50"></text></g><g><title>step (simulator/engines/RVO2SimulatorWrapper.py:314) (126 samples, 0.25%)</title><rect x="41.1355%" y="244" width="0.2459%" height="15" fill="rgb(224,169,11)" fg:x="21077" fg:w="126"/><text x="41.3855%" y="254.50"></text></g><g><title>__init__ (pydantic/main.py:193) (102 samples, 0.20%)</title><rect x="41.1823%" y="260" width="0.1991%" height="15" fill="rgb(250,166,2)" fg:x="21101" fg:w="102"/><text x="41.4323%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (simulator/engines/RVO2SimulatorWrapper.py:324) (161 samples, 0.31%)</title><rect x="41.4946%" y="260" width="0.3142%" height="15" fill="rgb(242,216,29)" fg:x="21261" fg:w="161"/><text x="41.7446%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (simulator/engines/RVO2SimulatorWrapper.py:327) (115 samples, 0.22%)</title><rect x="41.8596%" y="260" width="0.2244%" height="15" fill="rgb(230,116,27)" fg:x="21448" fg:w="115"/><text x="42.1096%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (simulator/engines/RVO2SimulatorWrapper.py:328) (361 samples, 0.70%)</title><rect x="42.0840%" y="260" width="0.7046%" height="15" fill="rgb(228,99,48)" fg:x="21563" fg:w="361"/><text x="42.3340%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (simulator/engines/RVO2SimulatorWrapper.py:329) (384 samples, 0.75%)</title><rect x="42.7886%" y="260" width="0.7494%" height="15" fill="rgb(253,11,6)" fg:x="21924" fg:w="384"/><text x="43.0386%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (simulator/engines/RVO2SimulatorWrapper.py:330) (443 samples, 0.86%)</title><rect x="43.5380%" y="260" width="0.8646%" height="15" fill="rgb(247,143,39)" fg:x="22308" fg:w="443"/><text x="43.7880%" y="270.50"></text></g><g><title>step (simulator/engines/RVO2SimulatorWrapper.py:323) (1,805 samples, 3.52%)</title><rect x="41.4282%" y="244" width="3.5228%" height="15" fill="rgb(236,97,10)" fg:x="21227" fg:w="1805"/><text x="41.6782%" y="254.50">ste..</text></g><g><title>&lt;listcomp&gt; (simulator/engines/RVO2SimulatorWrapper.py:331) (281 samples, 0.55%)</title><rect x="44.4026%" y="260" width="0.5484%" height="15" fill="rgb(233,208,19)" fg:x="22751" fg:w="281"/><text x="44.6526%" y="270.50"></text></g><g><title>store_step (simulator/engines/RVO2SimulatorWrapper.py:383) (190 samples, 0.37%)</title><rect x="45.1306%" y="260" width="0.3708%" height="15" fill="rgb(216,164,2)" fg:x="23124" fg:w="190"/><text x="45.3806%" y="270.50"></text></g><g><title>store_step (simulator/engines/RVO2SimulatorWrapper.py:384) (401 samples, 0.78%)</title><rect x="45.5014%" y="260" width="0.7826%" height="15" fill="rgb(220,129,5)" fg:x="23314" fg:w="401"/><text x="45.7514%" y="270.50"></text></g><g><title>execute_simulation_step (simulator/engines/base.py:203) (22,121 samples, 43.17%)</title><rect x="3.1168%" y="228" width="43.1730%" height="15" fill="rgb(242,17,10)" fg:x="1597" fg:w="22121"/><text x="3.3668%" y="238.50">execute_simulation_step (simulator/engines/base.py:203)</text></g><g><title>step (simulator/engines/RVO2SimulatorWrapper.py:342) (624 samples, 1.22%)</title><rect x="45.0720%" y="244" width="1.2178%" height="15" fill="rgb(242,107,0)" fg:x="23094" fg:w="624"/><text x="45.3220%" y="254.50"></text></g><g><title>__getattr__ (pydantic/main.py:802) (55 samples, 0.11%)</title><rect x="46.4753%" y="276" width="0.1073%" height="15" fill="rgb(251,28,31)" fg:x="23813" fg:w="55"/><text x="46.7253%" y="286.50"></text></g><g><title>apply (simulator/models/simulation_configuration/simulation_dynamics.py:61) (142 samples, 0.28%)</title><rect x="46.3152%" y="260" width="0.2771%" height="15" fill="rgb(233,223,10)" fg:x="23731" fg:w="142"/><text x="46.5652%" y="270.50"></text></g><g><title>run_after_step_dynamics (simulator/engines/base.py:59) (156 samples, 0.30%)</title><rect x="46.3055%" y="244" width="0.3045%" height="15" fill="rgb(215,21,27)" fg:x="23726" fg:w="156"/><text x="46.5555%" y="254.50"></text></g><g><title>step (rl_environments/single_agent/miac/miac_base.py:209) (22,520 samples, 43.95%)</title><rect x="2.6640%" y="212" width="43.9518%" height="15" fill="rgb(232,23,21)" fg:x="1365" fg:w="22520"/><text x="2.9140%" y="222.50">step (rl_environments/single_agent/miac/miac_base.py:209)</text></g><g><title>execute_simulation_step (simulator/engines/base.py:206) (167 samples, 0.33%)</title><rect x="46.2899%" y="228" width="0.3259%" height="15" fill="rgb(244,5,23)" fg:x="23718" fg:w="167"/><text x="46.5399%" y="238.50"></text></g><g><title>_get_obs (rl_environments/single_agent/miac/perp2.py:25) (127 samples, 0.25%)</title><rect x="46.7368%" y="228" width="0.2479%" height="15" fill="rgb(226,81,46)" fg:x="23947" fg:w="127"/><text x="46.9868%" y="238.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:230) (133 samples, 0.26%)</title><rect x="47.0178%" y="244" width="0.2596%" height="15" fill="rgb(247,70,30)" fg:x="24091" fg:w="133"/><text x="47.2678%" y="254.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:233) (223 samples, 0.44%)</title><rect x="47.2911%" y="244" width="0.4352%" height="15" fill="rgb(212,68,19)" fg:x="24231" fg:w="223"/><text x="47.5411%" y="254.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:234) (168 samples, 0.33%)</title><rect x="47.7263%" y="244" width="0.3279%" height="15" fill="rgb(240,187,13)" fg:x="24454" fg:w="168"/><text x="47.9763%" y="254.50"></text></g><g><title>column_stack (numpy/lib/shape_base.py:652) (79 samples, 0.15%)</title><rect x="47.9000%" y="260" width="0.1542%" height="15" fill="rgb(223,113,26)" fg:x="24543" fg:w="79"/><text x="48.1500%" y="270.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:235) (98 samples, 0.19%)</title><rect x="48.0542%" y="244" width="0.1913%" height="15" fill="rgb(206,192,2)" fg:x="24622" fg:w="98"/><text x="48.3042%" y="254.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:237) (71 samples, 0.14%)</title><rect x="48.2493%" y="244" width="0.1386%" height="15" fill="rgb(241,108,4)" fg:x="24722" fg:w="71"/><text x="48.4993%" y="254.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:238) (701 samples, 1.37%)</title><rect x="48.3879%" y="244" width="1.3681%" height="15" fill="rgb(247,173,49)" fg:x="24793" fg:w="701"/><text x="48.6379%" y="254.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:240) (328 samples, 0.64%)</title><rect x="49.7560%" y="244" width="0.6401%" height="15" fill="rgb(224,114,35)" fg:x="25494" fg:w="328"/><text x="50.0060%" y="254.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:241) (461 samples, 0.90%)</title><rect x="50.3962%" y="244" width="0.8997%" height="15" fill="rgb(245,159,27)" fg:x="25822" fg:w="461"/><text x="50.6462%" y="254.50"></text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:244) (13,371 samples, 26.10%)</title><rect x="51.2959%" y="244" width="26.0959%" height="15" fill="rgb(245,172,44)" fg:x="26283" fg:w="13371"/><text x="51.5459%" y="254.50">vector_360_ray_intersections (simulator/en..</text></g><g><title>vector_360_ray_intersections (simulator/engines/RVO2SimulatorWrapper.py:281) (79 samples, 0.15%)</title><rect x="77.4152%" y="244" width="0.1542%" height="15" fill="rgb(236,23,11)" fg:x="39666" fg:w="79"/><text x="77.6652%" y="254.50"></text></g><g><title>_get_obs (rl_environments/single_agent/miac/perp2.py:26) (15,672 samples, 30.59%)</title><rect x="46.9847%" y="228" width="30.5867%" height="15" fill="rgb(205,117,38)" fg:x="24074" fg:w="15672"/><text x="47.2347%" y="238.50">_get_obs (rl_environments/single_agent/miac/perp2..</text></g><g><title>_get_obs (rl_environments/single_agent/miac/perp2.py:28) (101 samples, 0.20%)</title><rect x="77.5713%" y="228" width="0.1971%" height="15" fill="rgb(237,72,25)" fg:x="39746" fg:w="101"/><text x="77.8213%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (rl_environments/single_agent/miac/perp2.py:31) (164 samples, 0.32%)</title><rect x="77.7802%" y="244" width="0.3201%" height="15" fill="rgb(244,70,9)" fg:x="39853" fg:w="164"/><text x="78.0302%" y="254.50"></text></g><g><title>_get_obs (rl_environments/single_agent/miac/perp2.py:31) (203 samples, 0.40%)</title><rect x="77.7685%" y="228" width="0.3962%" height="15" fill="rgb(217,125,39)" fg:x="39847" fg:w="203"/><text x="78.0185%" y="238.50"></text></g><g><title>step (rl_environments/single_agent/miac/miac_base.py:213) (16,565 samples, 32.33%)</title><rect x="46.6236%" y="212" width="32.3295%" height="15" fill="rgb(235,36,10)" fg:x="23889" fg:w="16565"/><text x="46.8736%" y="222.50">step (rl_environments/single_agent/miac/miac_base.py..</text></g><g><title>_get_obs (rl_environments/single_agent/miac/perp2.py:46) (366 samples, 0.71%)</title><rect x="78.2388%" y="228" width="0.7143%" height="15" fill="rgb(251,123,47)" fg:x="40088" fg:w="366"/><text x="78.4888%" y="238.50"></text></g><g><title>step (stable_baselines3/common/monitor.py:94) (39,653 samples, 77.39%)</title><rect x="1.7077%" y="196" width="77.3898%" height="15" fill="rgb(221,13,13)" fg:x="875" fg:w="39653"/><text x="1.9577%" y="206.50">step (stable_baselines3/common/monitor.py:94)</text></g><g><title>step_wait (stable_baselines3/common/vec_env/dummy_vec_env.py:58) (39,730 samples, 77.54%)</title><rect x="1.5828%" y="180" width="77.5401%" height="15" fill="rgb(238,131,9)" fg:x="811" fg:w="39730"/><text x="1.8328%" y="190.50">step_wait (stable_baselines3/common/vec_env/dummy_vec_env.py:58)</text></g><g><title>step_wait (stable_baselines3/common/vec_env/dummy_vec_env.py:70) (56 samples, 0.11%)</title><rect x="79.1698%" y="180" width="0.1093%" height="15" fill="rgb(211,50,8)" fg:x="40565" fg:w="56"/><text x="79.4198%" y="190.50"></text></g><g><title>reset (stable_baselines3/common/monitor.py:83) (54 samples, 0.11%)</title><rect x="79.1737%" y="196" width="0.1054%" height="15" fill="rgb(245,182,24)" fg:x="40567" fg:w="54"/><text x="79.4237%" y="206.50"></text></g><g><title>reset (rl_environments/single_agent/miac/miac_base.py:257) (52 samples, 0.10%)</title><rect x="79.1776%" y="212" width="0.1015%" height="15" fill="rgb(242,14,37)" fg:x="40569" fg:w="52"/><text x="79.4276%" y="222.50"></text></g><g><title>collect_rollouts (stable_baselines3/common/on_policy_algorithm.py:195) (39,910 samples, 77.89%)</title><rect x="1.5789%" y="148" width="77.8914%" height="15" fill="rgb(246,228,12)" fg:x="809" fg:w="39910"/><text x="1.8289%" y="158.50">collect_rollouts (stable_baselines3/common/on_policy_algorithm.py:195)</text></g><g><title>step (stable_baselines3/common/vec_env/base_vec_env.py:206) (39,909 samples, 77.89%)</title><rect x="1.5809%" y="164" width="77.8895%" height="15" fill="rgb(213,55,15)" fg:x="810" fg:w="39909"/><text x="1.8309%" y="174.50">step (stable_baselines3/common/vec_env/base_vec_env.py:206)</text></g><g><title>learn (stable_baselines3/common/on_policy_algorithm.py:300) (40,577 samples, 79.19%)</title><rect x="0.4547%" y="132" width="79.1932%" height="15" fill="rgb(209,9,3)" fg:x="233" fg:w="40577"/><text x="0.7047%" y="142.50">learn (stable_baselines3/common/on_policy_algorithm.py:300)</text></g><g><title>_get_samples (stable_baselines3/common/buffers.py:513) (130 samples, 0.25%)</title><rect x="79.7396%" y="180" width="0.2537%" height="15" fill="rgb(230,59,30)" fg:x="40857" fg:w="130"/><text x="79.9896%" y="190.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:207) (339 samples, 0.66%)</title><rect x="79.6596%" y="148" width="0.6616%" height="15" fill="rgb(209,121,21)" fg:x="40816" fg:w="339"/><text x="79.9096%" y="158.50"></text></g><g><title>get (stable_baselines3/common/buffers.py:504) (318 samples, 0.62%)</title><rect x="79.7006%" y="164" width="0.6206%" height="15" fill="rgb(220,109,13)" fg:x="40837" fg:w="318"/><text x="79.9506%" y="174.50"></text></g><g><title>_get_samples (stable_baselines3/common/buffers.py:520) (136 samples, 0.27%)</title><rect x="80.0558%" y="180" width="0.2654%" height="15" fill="rgb(232,18,1)" fg:x="41019" fg:w="136"/><text x="80.3058%" y="190.50"></text></g><g><title>to_torch (stable_baselines3/common/buffers.py:138) (124 samples, 0.24%)</title><rect x="80.0792%" y="196" width="0.2420%" height="15" fill="rgb(215,41,42)" fg:x="41031" fg:w="124"/><text x="80.3292%" y="206.50"></text></g><g><title>forward (torch/nn/modules/activation.py:392) (54 samples, 0.11%)</title><rect x="80.5359%" y="324" width="0.1054%" height="15" fill="rgb(224,123,36)" fg:x="41265" fg:w="54"/><text x="80.7859%" y="334.50"></text></g><g><title>forward_actor (stable_baselines3/common/torch_layers.py:225) (267 samples, 0.52%)</title><rect x="80.4520%" y="228" width="0.5211%" height="15" fill="rgb(240,125,3)" fg:x="41222" fg:w="267"/><text x="80.7020%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (262 samples, 0.51%)</title><rect x="80.4618%" y="244" width="0.5113%" height="15" fill="rgb(205,98,50)" fg:x="41227" fg:w="262"/><text x="80.7118%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (259 samples, 0.51%)</title><rect x="80.4676%" y="260" width="0.5055%" height="15" fill="rgb(205,185,37)" fg:x="41230" fg:w="259"/><text x="80.7176%" y="270.50"></text></g><g><title>forward (torch/nn/modules/container.py:250) (251 samples, 0.49%)</title><rect x="80.4832%" y="276" width="0.4899%" height="15" fill="rgb(238,207,15)" fg:x="41238" fg:w="251"/><text x="80.7332%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (240 samples, 0.47%)</title><rect x="80.5047%" y="292" width="0.4684%" height="15" fill="rgb(213,199,42)" fg:x="41249" fg:w="240"/><text x="80.7547%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (227 samples, 0.44%)</title><rect x="80.5301%" y="308" width="0.4430%" height="15" fill="rgb(235,201,11)" fg:x="41262" fg:w="227"/><text x="80.7801%" y="318.50"></text></g><g><title>forward (torch/nn/modules/linear.py:125) (167 samples, 0.33%)</title><rect x="80.6472%" y="324" width="0.3259%" height="15" fill="rgb(207,46,11)" fg:x="41322" fg:w="167"/><text x="80.8972%" y="334.50"></text></g><g><title>forward (torch/nn/modules/activation.py:392) (171 samples, 0.33%)</title><rect x="81.1312%" y="324" width="0.3337%" height="15" fill="rgb(241,35,35)" fg:x="41570" fg:w="171"/><text x="81.3812%" y="334.50"></text></g><g><title>evaluate_actions (stable_baselines3/common/policies.py:732) (886 samples, 1.73%)</title><rect x="80.4403%" y="164" width="1.7292%" height="15" fill="rgb(243,32,47)" fg:x="41216" fg:w="886"/><text x="80.6903%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (882 samples, 1.72%)</title><rect x="80.4481%" y="180" width="1.7214%" height="15" fill="rgb(247,202,23)" fg:x="41220" fg:w="882"/><text x="80.6981%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (880 samples, 1.72%)</title><rect x="80.4520%" y="196" width="1.7175%" height="15" fill="rgb(219,102,11)" fg:x="41222" fg:w="880"/><text x="80.7020%" y="206.50"></text></g><g><title>forward (stable_baselines3/common/torch_layers.py:222) (880 samples, 1.72%)</title><rect x="80.4520%" y="212" width="1.7175%" height="15" fill="rgb(243,110,44)" fg:x="41222" fg:w="880"/><text x="80.7020%" y="222.50"></text></g><g><title>forward_critic (stable_baselines3/common/torch_layers.py:228) (613 samples, 1.20%)</title><rect x="80.9731%" y="228" width="1.1964%" height="15" fill="rgb(222,74,54)" fg:x="41489" fg:w="613"/><text x="81.2231%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (601 samples, 1.17%)</title><rect x="80.9965%" y="244" width="1.1730%" height="15" fill="rgb(216,99,12)" fg:x="41501" fg:w="601"/><text x="81.2465%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (597 samples, 1.17%)</title><rect x="81.0043%" y="260" width="1.1652%" height="15" fill="rgb(226,22,26)" fg:x="41505" fg:w="597"/><text x="81.2543%" y="270.50"></text></g><g><title>forward (torch/nn/modules/container.py:250) (594 samples, 1.16%)</title><rect x="81.0102%" y="276" width="1.1593%" height="15" fill="rgb(217,163,10)" fg:x="41508" fg:w="594"/><text x="81.2602%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (573 samples, 1.12%)</title><rect x="81.0512%" y="292" width="1.1183%" height="15" fill="rgb(213,25,53)" fg:x="41529" fg:w="573"/><text x="81.3012%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (538 samples, 1.05%)</title><rect x="81.1195%" y="308" width="1.0500%" height="15" fill="rgb(252,105,26)" fg:x="41564" fg:w="538"/><text x="81.3695%" y="318.50"></text></g><g><title>forward (torch/nn/modules/linear.py:125) (361 samples, 0.70%)</title><rect x="81.4649%" y="324" width="0.7046%" height="15" fill="rgb(220,39,43)" fg:x="41741" fg:w="361"/><text x="81.7149%" y="334.50"></text></g><g><title>_get_action_dist_from_latent (stable_baselines3/common/policies.py:691) (106 samples, 0.21%)</title><rect x="82.1714%" y="180" width="0.2069%" height="15" fill="rgb(229,68,48)" fg:x="42103" fg:w="106"/><text x="82.4214%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (94 samples, 0.18%)</title><rect x="82.1949%" y="196" width="0.1835%" height="15" fill="rgb(252,8,32)" fg:x="42115" fg:w="94"/><text x="82.4449%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (85 samples, 0.17%)</title><rect x="82.2124%" y="212" width="0.1659%" height="15" fill="rgb(223,20,43)" fg:x="42124" fg:w="85"/><text x="82.4624%" y="222.50"></text></g><g><title>forward (torch/nn/modules/linear.py:125) (84 samples, 0.16%)</title><rect x="82.2144%" y="228" width="0.1639%" height="15" fill="rgb(229,81,49)" fg:x="42125" fg:w="84"/><text x="82.4644%" y="238.50"></text></g><g><title>proba_distribution (stable_baselines3/common/distributions.py:163) (127 samples, 0.25%)</title><rect x="82.3900%" y="196" width="0.2479%" height="15" fill="rgb(236,28,36)" fg:x="42215" fg:w="127"/><text x="82.6400%" y="206.50"></text></g><g><title>__init__ (torch/distributions/normal.py:54) (72 samples, 0.14%)</title><rect x="82.6789%" y="212" width="0.1405%" height="15" fill="rgb(249,185,26)" fg:x="42363" fg:w="72"/><text x="82.9289%" y="222.50"></text></g><g><title>broadcast_all (torch/distributions/utils.py:55) (56 samples, 0.11%)</title><rect x="82.7101%" y="228" width="0.1093%" height="15" fill="rgb(249,174,33)" fg:x="42379" fg:w="56"/><text x="82.9601%" y="238.50"></text></g><g><title>broadcast_tensors (torch/functional.py:76) (52 samples, 0.10%)</title><rect x="82.7179%" y="244" width="0.1015%" height="15" fill="rgb(233,201,37)" fg:x="42383" fg:w="52"/><text x="82.9679%" y="254.50"></text></g><g><title>__init__ (torch/distributions/distribution.py:69) (68 samples, 0.13%)</title><rect x="82.8955%" y="228" width="0.1327%" height="15" fill="rgb(221,78,26)" fg:x="42474" fg:w="68"/><text x="83.1455%" y="238.50"></text></g><g><title>__init__ (torch/distributions/distribution.py:70) (65 samples, 0.13%)</title><rect x="83.0282%" y="228" width="0.1269%" height="15" fill="rgb(250,127,30)" fg:x="42542" fg:w="65"/><text x="83.2782%" y="238.50"></text></g><g><title>evaluate_actions (stable_baselines3/common/policies.py:737) (507 samples, 0.99%)</title><rect x="82.1695%" y="164" width="0.9895%" height="15" fill="rgb(230,49,44)" fg:x="42102" fg:w="507"/><text x="82.4195%" y="174.50"></text></g><g><title>_get_action_dist_from_latent (stable_baselines3/common/policies.py:694) (399 samples, 0.78%)</title><rect x="82.3803%" y="180" width="0.7787%" height="15" fill="rgb(229,67,23)" fg:x="42210" fg:w="399"/><text x="82.6303%" y="190.50"></text></g><g><title>proba_distribution (stable_baselines3/common/distributions.py:164) (267 samples, 0.52%)</title><rect x="82.6379%" y="196" width="0.5211%" height="15" fill="rgb(249,83,47)" fg:x="42342" fg:w="267"/><text x="82.8879%" y="206.50"></text></g><g><title>__init__ (torch/distributions/normal.py:59) (156 samples, 0.30%)</title><rect x="82.8545%" y="212" width="0.3045%" height="15" fill="rgb(215,43,3)" fg:x="42453" fg:w="156"/><text x="83.1045%" y="222.50"></text></g><g><title>log_prob (torch/distributions/normal.py:82) (55 samples, 0.11%)</title><rect x="83.1687%" y="196" width="0.1073%" height="15" fill="rgb(238,154,13)" fg:x="42614" fg:w="55"/><text x="83.4187%" y="206.50"></text></g><g><title>log_prob (torch/distributions/normal.py:89) (122 samples, 0.24%)</title><rect x="83.4068%" y="196" width="0.2381%" height="15" fill="rgb(219,56,2)" fg:x="42736" fg:w="122"/><text x="83.6568%" y="206.50"></text></g><g><title>log_prob (stable_baselines3/common/distributions.py:175) (309 samples, 0.60%)</title><rect x="83.1648%" y="180" width="0.6031%" height="15" fill="rgb(233,0,4)" fg:x="42612" fg:w="309"/><text x="83.4148%" y="190.50"></text></g><g><title>evaluate_actions (stable_baselines3/common/policies.py:738) (350 samples, 0.68%)</title><rect x="83.1590%" y="164" width="0.6831%" height="15" fill="rgb(235,30,7)" fg:x="42609" fg:w="350"/><text x="83.4090%" y="174.50"></text></g><g><title>evaluate_actions (stable_baselines3/common/policies.py:739) (101 samples, 0.20%)</title><rect x="83.8421%" y="164" width="0.1971%" height="15" fill="rgb(250,79,13)" fg:x="42959" fg:w="101"/><text x="84.0921%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1739) (89 samples, 0.17%)</title><rect x="83.8655%" y="180" width="0.1737%" height="15" fill="rgb(211,146,34)" fg:x="42971" fg:w="89"/><text x="84.1155%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1750) (78 samples, 0.15%)</title><rect x="83.8870%" y="196" width="0.1522%" height="15" fill="rgb(228,22,38)" fg:x="42982" fg:w="78"/><text x="84.1370%" y="206.50"></text></g><g><title>forward (torch/nn/modules/linear.py:125) (77 samples, 0.15%)</title><rect x="83.8889%" y="212" width="0.1503%" height="15" fill="rgb(235,168,5)" fg:x="42983" fg:w="77"/><text x="84.1389%" y="222.50"></text></g><g><title>entropy (torch/distributions/normal.py:105) (85 samples, 0.17%)</title><rect x="84.0470%" y="196" width="0.1659%" height="15" fill="rgb(221,155,16)" fg:x="43064" fg:w="85"/><text x="84.2970%" y="206.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:217) (2,008 samples, 3.92%)</title><rect x="80.3310%" y="148" width="3.9190%" height="15" fill="rgb(215,215,53)" fg:x="41160" fg:w="2008"/><text x="80.5810%" y="158.50">trai..</text></g><g><title>evaluate_actions (stable_baselines3/common/policies.py:740) (108 samples, 0.21%)</title><rect x="84.0392%" y="164" width="0.2108%" height="15" fill="rgb(223,4,10)" fg:x="43060" fg:w="108"/><text x="84.2892%" y="174.50"></text></g><g><title>entropy (stable_baselines3/common/distributions.py:179) (108 samples, 0.21%)</title><rect x="84.0392%" y="180" width="0.2108%" height="15" fill="rgb(234,103,6)" fg:x="43060" fg:w="108"/><text x="84.2892%" y="190.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:223) (133 samples, 0.26%)</title><rect x="84.3280%" y="148" width="0.2596%" height="15" fill="rgb(227,97,0)" fg:x="43208" fg:w="133"/><text x="84.5780%" y="158.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:231) (70 samples, 0.14%)</title><rect x="84.7164%" y="148" width="0.1366%" height="15" fill="rgb(234,150,53)" fg:x="43407" fg:w="70"/><text x="84.9664%" y="158.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:235) (64 samples, 0.12%)</title><rect x="84.8589%" y="148" width="0.1249%" height="15" fill="rgb(228,201,54)" fg:x="43480" fg:w="64"/><text x="85.1089%" y="158.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:248) (52 samples, 0.10%)</title><rect x="84.9877%" y="148" width="0.1015%" height="15" fill="rgb(222,22,37)" fg:x="43546" fg:w="52"/><text x="85.2377%" y="158.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:260) (62 samples, 0.12%)</title><rect x="85.1302%" y="148" width="0.1210%" height="15" fill="rgb(237,53,32)" fg:x="43619" fg:w="62"/><text x="85.3802%" y="158.50"></text></g><g><title>zero_grad (torch/optim/optimizer.py:970) (78 samples, 0.15%)</title><rect x="85.4307%" y="196" width="0.1522%" height="15" fill="rgb(233,25,53)" fg:x="43773" fg:w="78"/><text x="85.6807%" y="206.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:745) (118 samples, 0.23%)</title><rect x="85.4268%" y="180" width="0.2303%" height="15" fill="rgb(210,40,34)" fg:x="43771" fg:w="118"/><text x="85.6768%" y="190.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:278) (136 samples, 0.27%)</title><rect x="85.3976%" y="148" width="0.2654%" height="15" fill="rgb(241,220,44)" fg:x="43756" fg:w="136"/><text x="85.6476%" y="158.50"></text></g><g><title>inner (torch/_compile.py:32) (135 samples, 0.26%)</title><rect x="85.3995%" y="164" width="0.2635%" height="15" fill="rgb(235,28,35)" fg:x="43757" fg:w="135"/><text x="85.6495%" y="174.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:279) (2,623 samples, 5.12%)</title><rect x="85.6630%" y="148" width="5.1192%" height="15" fill="rgb(210,56,17)" fg:x="43892" fg:w="2623"/><text x="85.9130%" y="158.50">train ..</text></g><g><title>backward (torch/_tensor.py:626) (2,618 samples, 5.11%)</title><rect x="85.6727%" y="164" width="5.1095%" height="15" fill="rgb(224,130,29)" fg:x="43897" fg:w="2618"/><text x="85.9227%" y="174.50">backwa..</text></g><g><title>backward (torch/autograd/__init__.py:347) (2,569 samples, 5.01%)</title><rect x="85.7684%" y="180" width="5.0139%" height="15" fill="rgb(235,212,8)" fg:x="43946" fg:w="2569"/><text x="86.0184%" y="190.50">backwa..</text></g><g><title>_engine_run_backward (torch/autograd/graph.py:823) (2,557 samples, 4.99%)</title><rect x="85.7918%" y="196" width="4.9904%" height="15" fill="rgb(223,33,50)" fg:x="43958" fg:w="2557"/><text x="86.0418%" y="206.50">_engin..</text></g><g><title>_no_grad_wrapper (torch/nn/utils/clip_grad.py:33) (76 samples, 0.15%)</title><rect x="90.8369%" y="164" width="0.1483%" height="15" fill="rgb(219,149,13)" fg:x="46543" fg:w="76"/><text x="91.0869%" y="174.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2820) (64 samples, 0.12%)</title><rect x="91.1257%" y="244" width="0.1249%" height="15" fill="rgb(250,156,29)" fg:x="46691" fg:w="64"/><text x="91.3757%" y="254.50"></text></g><g><title>_named_members (torch/nn/modules/module.py:2598) (91 samples, 0.18%)</title><rect x="91.0750%" y="228" width="0.1776%" height="15" fill="rgb(216,193,19)" fg:x="46665" fg:w="91"/><text x="91.3250%" y="238.50"></text></g><g><title>parameters (torch/nn/modules/module.py:2630) (167 samples, 0.33%)</title><rect x="91.0281%" y="196" width="0.3259%" height="15" fill="rgb(216,135,14)" fg:x="46641" fg:w="167"/><text x="91.2781%" y="206.50"></text></g><g><title>named_parameters (torch/nn/modules/module.py:2663) (151 samples, 0.29%)</title><rect x="91.0594%" y="212" width="0.2947%" height="15" fill="rgb(241,47,5)" fg:x="46657" fg:w="151"/><text x="91.3094%" y="222.50"></text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:213) (180 samples, 0.35%)</title><rect x="91.0106%" y="180" width="0.3513%" height="15" fill="rgb(233,42,35)" fg:x="46632" fg:w="180"/><text x="91.2606%" y="190.50"></text></g><g><title>_get_total_norm (torch/nn/utils/clip_grad.py:78) (54 samples, 0.11%)</title><rect x="91.5161%" y="212" width="0.1054%" height="15" fill="rgb(231,13,6)" fg:x="46891" fg:w="54"/><text x="91.7661%" y="222.50"></text></g><g><title>_get_total_norm (torch/nn/utils/clip_grad.py:84) (52 samples, 0.10%)</title><rect x="91.6273%" y="212" width="0.1015%" height="15" fill="rgb(207,181,40)" fg:x="46948" fg:w="52"/><text x="91.8773%" y="222.50"></text></g><g><title>_get_total_norm (torch/nn/utils/clip_grad.py:87) (209 samples, 0.41%)</title><rect x="91.7288%" y="212" width="0.4079%" height="15" fill="rgb(254,173,49)" fg:x="47000" fg:w="209"/><text x="91.9788%" y="222.50"></text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:215) (461 samples, 0.90%)</title><rect x="91.4302%" y="180" width="0.8997%" height="15" fill="rgb(221,1,38)" fg:x="46847" fg:w="461"/><text x="91.6802%" y="190.50"></text></g><g><title>_no_grad_wrapper (torch/nn/utils/clip_grad.py:34) (439 samples, 0.86%)</title><rect x="91.4731%" y="196" width="0.8568%" height="15" fill="rgb(206,124,46)" fg:x="46869" fg:w="439"/><text x="91.7231%" y="206.50"></text></g><g><title>_get_total_norm (torch/nn/utils/clip_grad.py:98) (76 samples, 0.15%)</title><rect x="92.1816%" y="212" width="0.1483%" height="15" fill="rgb(249,21,11)" fg:x="47232" fg:w="76"/><text x="92.4316%" y="222.50"></text></g><g><title>_clip_grads_with_norm_ (torch/nn/utils/clip_grad.py:155) (82 samples, 0.16%)</title><rect x="92.4314%" y="212" width="0.1600%" height="15" fill="rgb(222,201,40)" fg:x="47360" fg:w="82"/><text x="92.6814%" y="222.50"></text></g><g><title>_no_grad_wrapper (torch/nn/utils/clip_grad.py:34) (938 samples, 1.83%)</title><rect x="90.9852%" y="164" width="1.8307%" height="15" fill="rgb(235,61,29)" fg:x="46619" fg:w="938"/><text x="91.2352%" y="174.50">_..</text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:216) (249 samples, 0.49%)</title><rect x="92.3299%" y="180" width="0.4860%" height="15" fill="rgb(219,207,3)" fg:x="47308" fg:w="249"/><text x="92.5799%" y="190.50"></text></g><g><title>_no_grad_wrapper (torch/nn/utils/clip_grad.py:34) (243 samples, 0.47%)</title><rect x="92.3416%" y="196" width="0.4743%" height="15" fill="rgb(222,56,46)" fg:x="47314" fg:w="243"/><text x="92.5916%" y="206.50"></text></g><g><title>_clip_grads_with_norm_ (torch/nn/utils/clip_grad.py:164) (90 samples, 0.18%)</title><rect x="92.6402%" y="212" width="0.1757%" height="15" fill="rgb(239,76,54)" fg:x="47467" fg:w="90"/><text x="92.8902%" y="222.50"></text></g><g><title>train (stable_baselines3/ppo/ppo.py:281) (1,043 samples, 2.04%)</title><rect x="90.7822%" y="148" width="2.0356%" height="15" fill="rgb(231,124,27)" fg:x="46515" fg:w="1043"/><text x="91.0322%" y="158.50">t..</text></g><g><title>__exit__ (torch/autograd/profiler.py:769) (96 samples, 0.19%)</title><rect x="92.9232%" y="180" width="0.1874%" height="15" fill="rgb(249,195,6)" fg:x="47612" fg:w="96"/><text x="93.1732%" y="190.50"></text></g><g><title>wrapper (torch/optim/optimizer.py:478) (147 samples, 0.29%)</title><rect x="92.8354%" y="164" width="0.2869%" height="15" fill="rgb(237,174,47)" fg:x="47567" fg:w="147"/><text x="93.0854%" y="174.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:395) (265 samples, 0.52%)</title><rect x="93.4346%" y="244" width="0.5172%" height="15" fill="rgb(206,201,31)" fg:x="47874" fg:w="265"/><text x="93.6846%" y="254.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:423) (212 samples, 0.41%)</title><rect x="94.0747%" y="244" width="0.4138%" height="15" fill="rgb(231,57,52)" fg:x="48202" fg:w="212"/><text x="94.3247%" y="254.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:425) (484 samples, 0.94%)</title><rect x="94.4885%" y="244" width="0.9446%" height="15" fill="rgb(248,177,22)" fg:x="48414" fg:w="484"/><text x="94.7385%" y="254.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:460) (76 samples, 0.15%)</title><rect x="95.4448%" y="244" width="0.1483%" height="15" fill="rgb(215,211,37)" fg:x="48904" fg:w="76"/><text x="95.6948%" y="254.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:476) (1,335 samples, 2.61%)</title><rect x="95.6634%" y="244" width="2.6055%" height="15" fill="rgb(241,128,51)" fg:x="49016" fg:w="1335"/><text x="95.9134%" y="254.50">_s..</text></g><g><title>_single_tensor_adam (torch/optim/adam.py:478) (329 samples, 0.64%)</title><rect x="98.2689%" y="244" width="0.6421%" height="15" fill="rgb(227,165,31)" fg:x="50351" fg:w="329"/><text x="98.5189%" y="254.50"></text></g><g><title>step (torch/optim/adam.py:244) (2,892 samples, 5.64%)</title><rect x="93.2726%" y="196" width="5.6442%" height="15" fill="rgb(228,167,24)" fg:x="47791" fg:w="2892"/><text x="93.5226%" y="206.50">step (t..</text></g><g><title>maybe_fallback (torch/optim/optimizer.py:154) (2,888 samples, 5.64%)</title><rect x="93.2804%" y="212" width="5.6364%" height="15" fill="rgb(228,143,12)" fg:x="47795" fg:w="2888"/><text x="93.5304%" y="222.50">maybe_f..</text></g><g><title>adam (torch/optim/adam.py:876) (2,857 samples, 5.58%)</title><rect x="93.3409%" y="228" width="5.5759%" height="15" fill="rgb(249,149,8)" fg:x="47826" fg:w="2857"/><text x="93.5909%" y="238.50">adam (t..</text></g><g><title>_use_grad (torch/optim/optimizer.py:91) (2,962 samples, 5.78%)</title><rect x="93.1399%" y="180" width="5.7809%" height="15" fill="rgb(243,35,44)" fg:x="47723" fg:w="2962"/><text x="93.3899%" y="190.50">_use_gr..</text></g><g><title>wrapper (torch/optim/optimizer.py:493) (2,985 samples, 5.83%)</title><rect x="93.1262%" y="164" width="5.8258%" height="15" fill="rgb(246,89,9)" fg:x="47716" fg:w="2985"/><text x="93.3762%" y="174.50">wrapper..</text></g><g><title>train (stable_baselines3/ppo/ppo.py:282) (3,151 samples, 6.15%)</title><rect x="92.8178%" y="148" width="6.1497%" height="15" fill="rgb(233,213,13)" fg:x="47558" fg:w="3151"/><text x="93.0678%" y="158.50">train (s..</text></g><g><title>train (tests/helpers/trainer_testers.py:129) (50,480 samples, 98.52%)</title><rect x="0.4489%" y="100" width="98.5206%" height="15" fill="rgb(233,141,41)" fg:x="230" fg:w="50480"/><text x="0.6989%" y="110.50">train (tests/helpers/trainer_testers.py:129)</text></g><g><title>learn (stable_baselines3/ppo/ppo.py:315) (50,480 samples, 98.52%)</title><rect x="0.4489%" y="116" width="98.5206%" height="15" fill="rgb(239,167,4)" fg:x="230" fg:w="50480"/><text x="0.6989%" y="126.50">learn (stable_baselines3/ppo/ppo.py:315)</text></g><g><title>learn (stable_baselines3/common/on_policy_algorithm.py:313) (9,894 samples, 19.31%)</title><rect x="79.6596%" y="132" width="19.3099%" height="15" fill="rgb(209,217,16)" fg:x="40816" fg:w="9894"/><text x="79.9096%" y="142.50">learn (stable_baselines3/commo..</text></g><g><title>&lt;module&gt; (ppo_perp2_level_0.py:30) (50,637 samples, 98.83%)</title><rect x="0.1483%" y="68" width="98.8270%" height="15" fill="rgb(219,88,35)" fg:x="76" fg:w="50637"/><text x="0.3983%" y="78.50">&lt;module&gt; (ppo_perp2_level_0.py:30)</text></g><g><title>main (ppo_perp2_level_0.py:23) (50,637 samples, 98.83%)</title><rect x="0.1483%" y="84" width="98.8270%" height="15" fill="rgb(220,193,23)" fg:x="76" fg:w="50637"/><text x="0.3983%" y="94.50">main (ppo_perp2_level_0.py:23)</text></g><g><title>&lt;module&gt; (stable_baselines3/a2c/a2c.py:3) (185 samples, 0.36%)</title><rect x="98.9754%" y="452" width="0.3611%" height="15" fill="rgb(230,90,52)" fg:x="50713" fg:w="185"/><text x="99.2254%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (185 samples, 0.36%)</title><rect x="98.9754%" y="468" width="0.3611%" height="15" fill="rgb(252,106,19)" fg:x="50713" fg:w="185"/><text x="99.2254%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (185 samples, 0.36%)</title><rect x="98.9754%" y="484" width="0.3611%" height="15" fill="rgb(206,74,20)" fg:x="50713" fg:w="185"/><text x="99.2254%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (185 samples, 0.36%)</title><rect x="98.9754%" y="500" width="0.3611%" height="15" fill="rgb(230,138,44)" fg:x="50713" fg:w="185"/><text x="99.2254%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (184 samples, 0.36%)</title><rect x="98.9773%" y="516" width="0.3591%" height="15" fill="rgb(235,182,43)" fg:x="50714" fg:w="184"/><text x="99.2273%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (184 samples, 0.36%)</title><rect x="98.9773%" y="532" width="0.3591%" height="15" fill="rgb(242,16,51)" fg:x="50714" fg:w="184"/><text x="99.2273%" y="542.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:405) (90 samples, 0.18%)</title><rect x="99.1608%" y="548" width="0.1757%" height="15" fill="rgb(248,9,4)" fg:x="50808" fg:w="90"/><text x="99.4108%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (90 samples, 0.18%)</title><rect x="99.1608%" y="564" width="0.1757%" height="15" fill="rgb(210,31,22)" fg:x="50808" fg:w="90"/><text x="99.4108%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (90 samples, 0.18%)</title><rect x="99.1608%" y="580" width="0.1757%" height="15" fill="rgb(239,54,39)" fg:x="50808" fg:w="90"/><text x="99.4108%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:676) (90 samples, 0.18%)</title><rect x="99.1608%" y="596" width="0.1757%" height="15" fill="rgb(230,99,41)" fg:x="50808" fg:w="90"/><text x="99.4108%" y="606.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:573) (90 samples, 0.18%)</title><rect x="99.1608%" y="612" width="0.1757%" height="15" fill="rgb(253,106,12)" fg:x="50808" fg:w="90"/><text x="99.4108%" y="622.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1233) (90 samples, 0.18%)</title><rect x="99.1608%" y="628" width="0.1757%" height="15" fill="rgb(213,46,41)" fg:x="50808" fg:w="90"/><text x="99.4108%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (90 samples, 0.18%)</title><rect x="99.1608%" y="644" width="0.1757%" height="15" fill="rgb(215,133,35)" fg:x="50808" fg:w="90"/><text x="99.4108%" y="654.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/common/buffers.py:16) (95 samples, 0.19%)</title><rect x="99.3403%" y="548" width="0.1854%" height="15" fill="rgb(213,28,5)" fg:x="50900" fg:w="95"/><text x="99.5903%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (95 samples, 0.19%)</title><rect x="99.3403%" y="564" width="0.1854%" height="15" fill="rgb(215,77,49)" fg:x="50900" fg:w="95"/><text x="99.5903%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (95 samples, 0.19%)</title><rect x="99.3403%" y="580" width="0.1854%" height="15" fill="rgb(248,100,22)" fg:x="50900" fg:w="95"/><text x="99.5903%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (95 samples, 0.19%)</title><rect x="99.3403%" y="596" width="0.1854%" height="15" fill="rgb(208,67,9)" fg:x="50900" fg:w="95"/><text x="99.5903%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (95 samples, 0.19%)</title><rect x="99.3403%" y="612" width="0.1854%" height="15" fill="rgb(219,133,21)" fg:x="50900" fg:w="95"/><text x="99.5903%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (95 samples, 0.19%)</title><rect x="99.3403%" y="628" width="0.1854%" height="15" fill="rgb(246,46,29)" fg:x="50900" fg:w="95"/><text x="99.5903%" y="638.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/common/utils.py:24) (84 samples, 0.16%)</title><rect x="99.3618%" y="644" width="0.1639%" height="15" fill="rgb(246,185,52)" fg:x="50911" fg:w="84"/><text x="99.6118%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (84 samples, 0.16%)</title><rect x="99.3618%" y="660" width="0.1639%" height="15" fill="rgb(252,136,11)" fg:x="50911" fg:w="84"/><text x="99.6118%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (84 samples, 0.16%)</title><rect x="99.3618%" y="676" width="0.1639%" height="15" fill="rgb(219,138,53)" fg:x="50911" fg:w="84"/><text x="99.6118%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (84 samples, 0.16%)</title><rect x="99.3618%" y="692" width="0.1639%" height="15" fill="rgb(211,51,23)" fg:x="50911" fg:w="84"/><text x="99.6118%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (84 samples, 0.16%)</title><rect x="99.3618%" y="708" width="0.1639%" height="15" fill="rgb(247,221,28)" fg:x="50911" fg:w="84"/><text x="99.6118%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (84 samples, 0.16%)</title><rect x="99.3618%" y="724" width="0.1639%" height="15" fill="rgb(251,222,45)" fg:x="50911" fg:w="84"/><text x="99.6118%" y="734.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/a2c/a2c.py:7) (98 samples, 0.19%)</title><rect x="99.3364%" y="452" width="0.1913%" height="15" fill="rgb(217,162,53)" fg:x="50898" fg:w="98"/><text x="99.5864%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (98 samples, 0.19%)</title><rect x="99.3364%" y="468" width="0.1913%" height="15" fill="rgb(229,93,14)" fg:x="50898" fg:w="98"/><text x="99.5864%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (97 samples, 0.19%)</title><rect x="99.3384%" y="484" width="0.1893%" height="15" fill="rgb(209,67,49)" fg:x="50899" fg:w="97"/><text x="99.5884%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (97 samples, 0.19%)</title><rect x="99.3384%" y="500" width="0.1893%" height="15" fill="rgb(213,87,29)" fg:x="50899" fg:w="97"/><text x="99.5884%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (97 samples, 0.19%)</title><rect x="99.3384%" y="516" width="0.1893%" height="15" fill="rgb(205,151,52)" fg:x="50899" fg:w="97"/><text x="99.5884%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (97 samples, 0.19%)</title><rect x="99.3384%" y="532" width="0.1893%" height="15" fill="rgb(253,215,39)" fg:x="50899" fg:w="97"/><text x="99.5884%" y="542.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/__init__.py:3) (286 samples, 0.56%)</title><rect x="98.9754%" y="260" width="0.5582%" height="15" fill="rgb(221,220,41)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (286 samples, 0.56%)</title><rect x="98.9754%" y="276" width="0.5582%" height="15" fill="rgb(218,133,21)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (286 samples, 0.56%)</title><rect x="98.9754%" y="292" width="0.5582%" height="15" fill="rgb(221,193,43)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (286 samples, 0.56%)</title><rect x="98.9754%" y="308" width="0.5582%" height="15" fill="rgb(240,128,52)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (286 samples, 0.56%)</title><rect x="98.9754%" y="324" width="0.5582%" height="15" fill="rgb(253,114,12)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (286 samples, 0.56%)</title><rect x="98.9754%" y="340" width="0.5582%" height="15" fill="rgb(215,223,47)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="350.50"></text></g><g><title>&lt;module&gt; (stable_baselines3/a2c/__init__.py:1) (286 samples, 0.56%)</title><rect x="98.9754%" y="356" width="0.5582%" height="15" fill="rgb(248,225,23)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (286 samples, 0.56%)</title><rect x="98.9754%" y="372" width="0.5582%" height="15" fill="rgb(250,108,0)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (286 samples, 0.56%)</title><rect x="98.9754%" y="388" width="0.5582%" height="15" fill="rgb(228,208,7)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (286 samples, 0.56%)</title><rect x="98.9754%" y="404" width="0.5582%" height="15" fill="rgb(244,45,10)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (286 samples, 0.56%)</title><rect x="98.9754%" y="420" width="0.5582%" height="15" fill="rgb(207,125,25)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (286 samples, 0.56%)</title><rect x="98.9754%" y="436" width="0.5582%" height="15" fill="rgb(210,195,18)" fg:x="50713" fg:w="286"/><text x="99.2254%" y="446.50"></text></g><g><title>&lt;module&gt; (ppo_perp2_level_0.py:4) (287 samples, 0.56%)</title><rect x="98.9754%" y="68" width="0.5601%" height="15" fill="rgb(249,80,12)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (287 samples, 0.56%)</title><rect x="98.9754%" y="84" width="0.5601%" height="15" fill="rgb(221,65,9)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (287 samples, 0.56%)</title><rect x="98.9754%" y="100" width="0.5601%" height="15" fill="rgb(235,49,36)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (287 samples, 0.56%)</title><rect x="98.9754%" y="116" width="0.5601%" height="15" fill="rgb(225,32,20)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (287 samples, 0.56%)</title><rect x="98.9754%" y="132" width="0.5601%" height="15" fill="rgb(215,141,46)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (287 samples, 0.56%)</title><rect x="98.9754%" y="148" width="0.5601%" height="15" fill="rgb(250,160,47)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="158.50"></text></g><g><title>&lt;module&gt; (tests/helpers/trainer_testers.py:5) (287 samples, 0.56%)</title><rect x="98.9754%" y="164" width="0.5601%" height="15" fill="rgb(216,222,40)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (287 samples, 0.56%)</title><rect x="98.9754%" y="180" width="0.5601%" height="15" fill="rgb(234,217,39)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (287 samples, 0.56%)</title><rect x="98.9754%" y="196" width="0.5601%" height="15" fill="rgb(207,178,40)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (287 samples, 0.56%)</title><rect x="98.9754%" y="212" width="0.5601%" height="15" fill="rgb(221,136,13)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (287 samples, 0.56%)</title><rect x="98.9754%" y="228" width="0.5601%" height="15" fill="rgb(249,199,10)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (287 samples, 0.56%)</title><rect x="98.9754%" y="244" width="0.5601%" height="15" fill="rgb(249,222,13)" fg:x="50713" fg:w="287"/><text x="99.2254%" y="254.50"></text></g><g><title>_write_buffer (rich/console.py:2102) (87 samples, 0.17%)</title><rect x="99.6038%" y="180" width="0.1698%" height="15" fill="rgb(244,185,38)" fg:x="51035" fg:w="87"/><text x="99.8538%" y="190.50"></text></g><g><title>refresh (rich/live.py:241) (98 samples, 0.19%)</title><rect x="99.5882%" y="116" width="0.1913%" height="15" fill="rgb(236,202,9)" fg:x="51027" fg:w="98"/><text x="99.8382%" y="126.50"></text></g><g><title>__exit__ (rich/console.py:866) (97 samples, 0.19%)</title><rect x="99.5901%" y="132" width="0.1893%" height="15" fill="rgb(250,229,37)" fg:x="51028" fg:w="97"/><text x="99.8401%" y="142.50"></text></g><g><title>_exit_buffer (rich/console.py:824) (96 samples, 0.19%)</title><rect x="99.5921%" y="148" width="0.1874%" height="15" fill="rgb(206,174,23)" fg:x="51029" fg:w="96"/><text x="99.8421%" y="158.50"></text></g><g><title>_check_buffer (rich/console.py:2033) (96 samples, 0.19%)</title><rect x="99.5921%" y="164" width="0.1874%" height="15" fill="rgb(211,33,43)" fg:x="51029" fg:w="96"/><text x="99.8421%" y="174.50"></text></g><g><title>split_and_crop_lines (rich/segment.py:305) (60 samples, 0.12%)</title><rect x="99.8068%" y="196" width="0.1171%" height="15" fill="rgb(245,58,50)" fg:x="51139" fg:w="60"/><text x="100.0568%" y="206.50"></text></g><g><title>render (rich/console.py:1344) (60 samples, 0.12%)</title><rect x="99.8068%" y="212" width="0.1171%" height="15" fill="rgb(244,68,36)" fg:x="51139" fg:w="60"/><text x="100.0568%" y="222.50"></text></g><g><title>render (rich/console.py:1340) (60 samples, 0.12%)</title><rect x="99.8068%" y="228" width="0.1171%" height="15" fill="rgb(232,229,15)" fg:x="51139" fg:w="60"/><text x="100.0568%" y="238.50"></text></g><g><title>__rich_console__ (rich/table.py:515) (58 samples, 0.11%)</title><rect x="99.8107%" y="244" width="0.1132%" height="15" fill="rgb(254,30,23)" fg:x="51141" fg:w="58"/><text x="100.0607%" y="254.50"></text></g><g><title>__rich_console__ (rich/live_render.py:87) (69 samples, 0.13%)</title><rect x="99.8068%" y="164" width="0.1347%" height="15" fill="rgb(235,160,14)" fg:x="51139" fg:w="69"/><text x="100.0568%" y="174.50"></text></g><g><title>render_lines (rich/console.py:1381) (69 samples, 0.13%)</title><rect x="99.8068%" y="180" width="0.1347%" height="15" fill="rgb(212,155,44)" fg:x="51139" fg:w="69"/><text x="100.0568%" y="190.50"></text></g><g><title>render (rich/console.py:1340) (74 samples, 0.14%)</title><rect x="99.8048%" y="148" width="0.1444%" height="15" fill="rgb(226,2,50)" fg:x="51138" fg:w="74"/><text x="100.0548%" y="158.50"></text></g><g><title>print (rich/console.py:1719) (76 samples, 0.15%)</title><rect x="99.8048%" y="132" width="0.1483%" height="15" fill="rgb(234,177,6)" fg:x="51138" fg:w="76"/><text x="100.0548%" y="142.50"></text></g><g><title>all (51,238 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(217,24,9)" fg:x="0" fg:w="51238"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:1002) (238 samples, 0.46%)</title><rect x="99.5355%" y="68" width="0.4645%" height="15" fill="rgb(220,13,46)" fg:x="51000" fg:w="238"/><text x="99.7855%" y="78.50"></text></g><g><title>_bootstrap_inner (threading.py:1045) (238 samples, 0.46%)</title><rect x="99.5355%" y="84" width="0.4645%" height="15" fill="rgb(239,221,27)" fg:x="51000" fg:w="238"/><text x="99.7855%" y="94.50"></text></g><g><title>run (rich/live.py:32) (237 samples, 0.46%)</title><rect x="99.5375%" y="100" width="0.4625%" height="15" fill="rgb(222,198,25)" fg:x="51001" fg:w="237"/><text x="99.7875%" y="110.50"></text></g><g><title>refresh (rich/live.py:242) (113 samples, 0.22%)</title><rect x="99.7795%" y="116" width="0.2205%" height="15" fill="rgb(211,99,13)" fg:x="51125" fg:w="113"/><text x="100.0295%" y="126.50"></text></g></svg></svg>